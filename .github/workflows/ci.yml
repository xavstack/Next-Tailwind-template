name: Continuous Integration

on:
  push:
    branches: [main, develop, feat/*]
  pull_request:
    branches: [main, develop]

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
      fail-fast: false # Don't cancel other jobs if one fails

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format -- --check

      - name: Run TypeScript check
        run: npm run build

      - name: Run tests with coverage
        run: npm test -- --coverage --coverageThreshold='{"branches":75,"functions":75,"lines":75,"statements":75}'
        env:
          CI: true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.node-version == '20.x'
        with:
          fail_ci_if_error: false

      - name: Run quality checks
        run: |
          chmod +x ./scripts/quality/ci-check.sh
          ./scripts/quality/ci-check.sh
        env:
          CI: true

      - name: Check bundle size
        run: |
          chmod +x ./scripts/quality/check-bundle-size.sh
          ./scripts/quality/check-bundle-size.sh
        continue-on-error: true # Don't fail CI for warnings

      - name: Find dead code
        run: |
          chmod +x ./scripts/quality/find-dead-code.sh
          ./scripts/quality/find-dead-code.sh
        continue-on-error: true # Don't fail CI for warnings

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for known vulnerabilities
        run: npx audit-ci --high
        continue-on-error: true # Don't fail for minor vulnerabilities

  performance-monitoring:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Bundle analysis
        run: |
          chmod +x ./scripts/quality/check-bundle-size.sh
          ./scripts/quality/check-bundle-size.sh --analyze
        continue-on-error: true

      - name: Run Lighthouse CI
        run: |
          # Install Lighthouse CI globally for Chrome dependencies
          npm install -g @lhci/cli@0.13.x
          # Run Lighthouse tests (warn-only, non-blocking)
          lhci collect --config=./lighthouserc.js || echo "⚠️ Lighthouse CI completed with warnings"
        continue-on-error: true

      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-reports
          path: |
            lighthouse-reports/
            .next/analyze/
          retention-days: 30
